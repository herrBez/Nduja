from typing import Any
from typing import List
from dao.account import Account


class DbManager:

    @staticmethod
    def setDBFileName(filename): ...

    @staticmethod
    def getInstance(): ...

    def __init__(self) -> None: ...

    def initConnection(self) -> None: ...

    def closeDb(self) -> None: ...

    def saveChanges(self) -> None: ...


    def insertWallet(self, address: str, currency: str, status: int) -> bool: ...

    def insertWalletWithAccount(self, address: str, currency: str, status: int,
                                account: str, url: str) -> bool: ...

    def insertInformation(self, name: str, website: str, email: str, json: str) -> int: ...

    def insertAccount(self, host: str, username: str, info: str) -> int: ...

    def insertAccountNoInfo(self, host: str, username: str) -> int: ...

    def insertAccountWallet(self, account: str, wallet: str, url: str) -> int: ...

    def findWallet(self, address: str) -> bool: ...

    def findAccount(self, host: str, username: str) -> int: ...

    def insertNewInfo(self, address: str, currency: str, status: int,
                      name: str, website: str, email: str, json: str,
                      host: str, username: str, url: str): ...

    def insertMultipleAddresses(self, acc: Account,
                                wallets: List[str]) -> None: ...

    def getAllAccounts(self) -> List[Account]: ...

    def addInfoToAccount(self, accountId: int, infoId: int) -> bool: ...


    def getAllWallets(self) -> List[Account]: ...


    def getAllKnownWallets(self) -> List[Account]: ...


